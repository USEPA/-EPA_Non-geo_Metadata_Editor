{"remainingRequest":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/babel-loader/lib/index.js!/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/src/components/PeriodicityInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/src/components/PeriodicityInput.vue","mtime":1538530662665},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/cache-loader/dist/cjs.js","mtime":1538585838221},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/cache-loader/dist/cjs.js","mtime":1538585838221},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"DateOrPeriodicityInput\",\n  props: {\n    periods: {\n      type: Array,\n      default: function _default() {\n        return [{\n          label: \"\",\n          value: \"\"\n        }, {\n          label: \"years\",\n          value: \"R/P%Y\"\n        }, {\n          label: \"months\",\n          value: \"R/P%M\"\n        }, {\n          label: \"weeks\",\n          value: \"R/P%W\"\n        }, {\n          label: \"days\",\n          value: \"R/P%D\"\n        }, {\n          label: \"hours\",\n          value: \"R/PT%H\"\n        }, {\n          label: \"minutes\",\n          value: \"R/PT%M\"\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      repeatNumericalPart: \"\",\n      repeatPeriodPart: \"\"\n    };\n  },\n  methods: {\n    emitUpdate: function emitUpdate() {\n      this.$emit(\"update:userInput\", this.userInput);\n    }\n  },\n  computed: {\n    userInput: {\n      get: function get() {\n        var result = \"\";\n        if (this.repeatNumericalPart && this.repeatPeriodPart) result = this.repeatPeriodPart.replace(\"%\", this.repeatNumericalPart);\n        return result;\n      },\n      set: function set(newValue) {//TODO\n      }\n    }\n  }\n};",{"version":3,"sources":["PeriodicityInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,eAAA;AACA,QAAA,wBADA;AAEA,SAAA;AACA,aAAA;AACA,YAAA,KADA;AAEA,eAAA;AAAA,eAAA,CACA;AAAA,iBAAA,EAAA;AAAA,iBAAA;AAAA,SADA,EAEA;AAAA,iBAAA,OAAA;AAAA,iBAAA;AAAA,SAFA,EAGA;AAAA,iBAAA,QAAA;AAAA,iBAAA;AAAA,SAHA,EAIA;AAAA,iBAAA,OAAA;AAAA,iBAAA;AAAA,SAJA,EAKA;AAAA,iBAAA,MAAA;AAAA,iBAAA;AAAA,SALA,EAMA;AAAA,iBAAA,OAAA;AAAA,iBAAA;AAAA,SANA,EAOA;AAAA,iBAAA,SAAA;AAAA,iBAAA;AAAA,SAPA,CAAA;AAAA;AAFA;AADA,GAFA;AAgBA,MAhBA,kBAgBA;AACA,WAAA;AACA,2BAAA,EADA;AAEA,wBAAA;AAFA,KAAA;AAIA,GArBA;AAsBA,WAAA;AACA,gBAAA,sBAAA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,SAAA;AACA;AAHA,GAtBA;AA2BA,YAAA;AACA,eAAA;AACA,WAAA,eAAA;AACA,YAAA,SAAA,EAAA;AACA,YAAA,KAAA,mBAAA,IAAA,KAAA,gBAAA,EACA,SAAA,KAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,mBAAA,CAAA;AACA,eAAA,MAAA;AACA,OANA;AAOA,WAAA,aAAA,QAAA,EAAA,CACA;AACA;AATA;AADA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"aligned\">\n    <q-input type=\"number\" v-model=\"repeatNumericalPart\" @change=\"emitUpdate()\" min=\"1\" max=\"365\" placeholder=\"number\"/>\n\n    <q-select\n      v-model=\"repeatPeriodPart\"\n      :options=\"periods\"\n      @input=\"emitUpdate()\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DateOrPeriodicityInput\",\n  props: {\n    periods: {\n      type: Array,\n      default: () => [\n        { label: \"\", value: \"\" },\n        { label: \"years\", value: \"R/P%Y\" },\n        { label: \"months\", value: \"R/P%M\" },\n        { label: \"weeks\", value: \"R/P%W\" },\n        { label: \"days\", value: \"R/P%D\" },\n        { label: \"hours\", value: \"R/PT%H\" },\n        { label: \"minutes\", value: \"R/PT%M\" }\n      ]\n    }\n  },\n  data() {\n    return {\n      repeatNumericalPart: \"\",\n      repeatPeriodPart: \"\"\n    };\n  },\n  methods: {\n    emitUpdate: function() {\n      this.$emit(\"update:userInput\", this.userInput);\n    }\n  },\n  computed: {\n    userInput: {\n      get: function() {\n        var result = \"\";\n        if (this.repeatNumericalPart && this.repeatPeriodPart)\n          result = this.repeatPeriodPart.replace(\"%\", this.repeatNumericalPart);\n        return result;\n      },\n      set: function(newValue) {\n        //TODO\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.aligned {\n  margin-left: 2%;\n  display: flex;\n  align-items: center;\n}\n</style>"],"sourceRoot":"src/components"}]}