{"remainingRequest":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/src/App.vue","mtime":1538531962149},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/cache-loader/dist/cjs.js","mtime":1538585838221},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/cache-loader/dist/cjs.js","mtime":1538585838221},{"path":"/Users/aergul/WORK/EPA_Non-geo_Metadata_Editor/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport mdSpec from \"./assets/epa-metadata-tech-spec.json\";\nimport config from \"./config.js\";\n\nimport EPA from \"./components/EPA.vue\";\nimport ElementHeader from \"./components/ElementHeader.vue\";\n//import ORCID from './components/ORCID.vue'\nimport TextInput from \"./components/TextInput.vue\";\nimport TagCollector from \"./components/TagCollector.vue\";\nimport PeriodicityInput from \"./components/PeriodicityInput.vue\";\nimport DateOrRangeInput from \"./components/DateOrRangeInput.vue\";\nimport DocId from \"./components/DocId.vue\";\nimport OptionSelector from \"./components/OptionSelector.vue\";\nimport BooleanSelector from \"./components/BooleanSelector.vue\";\nimport SpeedDial from \"./components/SpeedDial.vue\";\nimport { uuid } from \"vue-uuid\";\n\nvar noop = function() {};\n\nexport default {\n  name: \"app\",\n  components: {\n    EPA,\n    ElementHeader,\n    TextInput,\n    TagCollector,\n    PeriodicityInput,\n    DateOrRangeInput,\n    DocId,\n    OptionSelector,\n    BooleanSelector,\n    SpeedDial\n\n    //, ORCID\n  },\n  data() {\n    return {\n      doc: {\n        title: \"\",\n        description: \"\",\n        tags_epa_theme: [],\n        tags_place: [],\n        tags_iso: [],\n        epa_org: [],\n        modified: \"\",\n        publisher: \"\",\n        contactPoint: {\n          \"@type\": \"vcard:Contact\",\n          fn: \"\",\n          hasEmail: \"\"\n        },\n        identifier: \"\",\n        accessLevel: \"\",\n        rights: \"\",\n        license: \"\",\n        temporal: \"\",\n        issued: \"\",\n        accrualPeriodicity: \"\",\n        language: \"\",\n        dataQuality: false,\n        conformsTo: \"\",\n        describedBy: \"\",\n        landingPage: \"\",\n        references: \"\"\n      },\n      validations: {\n        title: \"\",\n        description: \"\",\n        tags_epa_theme: \"\",\n        tags_place: \"\",\n        tags_iso: \"\",\n        epa_org: \"\",\n        modified: \"\",\n        publisher: \"\",\n        contactPoint: {\n          fn: \"\",\n          hasEmail: \"\"\n        },\n        identifier: \"\",\n        accessLevel: \"\",\n        rights: \"\",\n        license: \"\",\n        temporal: \"\",\n        issued: \"\",\n        accrualPeriodicity: \"\",\n        language: \"\",\n        dataQuality: \"\",\n        conformsTo: \"\",\n        describedBy: \"\",\n        landingPage: \"\",\n        references: \"\"\n      },\n      mdSpec: mdSpec,\n      config: config,\n      uuid: uuid,\n      isEpaUser: false\n    };\n  },\n\n  methods: {\n    getConfigFor(mdElement, cfgElement, defaultValue) {\n      var searchDoc;\n      if (\n        cfgElement == \"guidance\" ||\n        cfgElement == \"epaguidance\" ||\n        cfgElement == \"externalguidance\"\n      )\n        searchDoc = this.mdSpec;\n      else searchDoc = this.config;\n      var mdElementSpec = this.findElement(searchDoc, mdElement);\n      return mdElementSpec && mdElementSpec[cfgElement]\n        ? mdElementSpec[cfgElement]\n        : defaultValue;\n    },\n\n    getGuidanceFor(mdElement) {\n      var guidance = this.getConfigFor(mdElement, \"guidance\") || \"\";\n      if (this.isEpaUser) {\n        var epaguidance = this.getConfigFor(mdElement, \"epaguidance\") || \"\";\n        if (epaguidance) guidance += \"<br/>\" + epaguidance;\n      } else {\n        var externalguidance =\n          this.getConfigFor(mdElement, \"externalguidance\") || \"\";\n        if (externalguidance) guidance += \"<br/>\" + externalguidance;\n      }\n      return guidance.trim()\n        ? guidance.trim()\n        : \"No guidance available at this time.\";\n    },\n\n    validateElement(mdElement) {\n      var mdElementValue = this.findElement(this.doc, mdElement);\n      var elementConfig = this.findElement(this.config, mdElement);\n      var validationResults = \"\";\n      if (elementConfig) {\n        var validators = elementConfig.validators;\n        if (!validators || !validators.length) return; // No validator(s) for element\n        validators.forEach(validator => {\n          validator.args.doc = this.doc;\n          validationResults +=\n            validator.fn.call(this, mdElementValue, validator.args) + \"\\n\";\n        });\n      } else {\n        // No config for element\n        validationResults = \"No validators available for this element\";\n      }\n      this.setElement(this.validations, mdElement, validationResults);\n    },\n\n    findElement(doc, elementPath) {\n      var tempRoot = doc;\n      noop(tempRoot);\n      try {\n        return eval(\"tempRoot.\" + elementPath);\n      } catch (e) {\n        return \"\";\n      }\n    },\n\n    setElement(doc, elementPath, newValue) {\n      elementPath = \"tempRoot.\" + elementPath;\n      var i = elementPath.lastIndexOf(\".\");\n      var leaf = elementPath.substring(i + 1);\n      elementPath = elementPath.substring(0, i);\n      var tempRoot = doc;\n      noop(tempRoot);\n      var element = eval(elementPath);\n      element[leaf] = newValue;\n    }\n  },\n  watch: {\n    \"doc.title\": {\n      handler: function() {\n        this.validateElement(\"title\");\n      },\n      immediate: true\n    },\n    \"doc.description\": {\n      handler: function() {\n        this.validateElement(\"description\");\n      },\n      immediate: true\n    },\n    \"doc.epa_org\": {\n      handler: function() {\n        this.validateElement(\"epa_org\");\n      },\n      immediate: true\n    },\n    \"doc.tags_place\": {\n      handler: function() {\n        this.validateElement(\"tags_place\");\n      },\n      immediate: true\n    },\n    \"doc.tags_iso\": {\n      handler: function() {\n        this.validateElement(\"tags_iso\");\n      },\n      immediate: true\n    },\n    \"doc.tags_epa_theme\": {\n      handler: function() {\n        this.validateElement(\"tags_epa_theme\");\n      },\n      immediate: true\n    },\n    \"doc.modified\": {\n      handler: function() {\n        this.validateElement(\"modified\");\n        this.validateElement(\"accrualPeriodicity\");\n      },\n      immediate: true\n    },\n    \"doc.accrualPeriodicity\": {\n      handler: function() {\n        this.validateElement(\"accrualPeriodicity\");\n        this.validateElement(\"modified\");\n      },\n      immediate: true\n    },\n    \"doc.publisher\": {\n      handler: function() {\n        this.validateElement(\"publisher\");\n      },\n      immediate: true\n    },\n    \"doc.contactPoint.fn\": {\n      handler: function() {\n        this.validateElement(\"contactPoint.fn\");\n      },\n      immediate: true\n    },\n    \"doc.contactPoint.hasEmail\": {\n      handler: function() {\n        this.validateElement(\"contactPoint.hasEmail\");\n      },\n      immediate: true\n    },\n    \"doc.identifier\": {\n      handler: function() {\n        this.validateElement(\"identifier\");\n      },\n      immediate: true\n    },\n    \"doc.accessLevel\": {\n      handler: function() {\n        this.validateElement(\"accessLevel\");\n      },\n      immediate: true\n    },\n\n    \"doc.rights\": {\n      handler: function() {\n        this.validateElement(\"rights\");\n      },\n      immediate: true\n    },\n    \"doc.license\": {\n      handler: function() {\n        this.validateElement(\"license\");\n      },\n      immediate: true\n    },\n    \"doc.temporal\": {\n      handler: function() {\n        this.validateElement(\"temporal\");\n      },\n      immediate: true\n    },\n\n    \"doc.issued\": {\n      handler: function() {\n        this.validateElement(\"issued\");\n      },\n      immediate: true\n    },\n    \"doc.language\": {\n      handler: function() {\n        this.validateElement(\"language\");\n      },\n      immediate: true\n    },\n    \"doc.dataQuality\": {\n      handler: function() {\n        this.validateElement(\"dataQuality\");\n      },\n      immediate: true\n    },\n    \"doc.conformsTo\": {\n      handler: function() {\n        this.validateElement(\"conformsTo\");\n      },\n      immediate: true\n    },\n    \"doc.describedBy\": {\n      handler: function() {\n        this.validateElement(\"describedBy\");\n      },\n      immediate: true\n    },\n    \"doc.landingPage\": {\n      handler: function() {\n        this.validateElement(\"landingPage\");\n      },\n      immediate: true\n    },\n    \"doc.references\": {\n      handler: function() {\n        this.validateElement(\"references\");\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    materializeDoc() {\n      // Deep copy the working document\n      var outDoc = JSON.parse(JSON.stringify(this.doc));\n      // Fix up hasEmail\n      outDoc.contactPoint.hasEmail = \"mailto:\" + outDoc.contactPoint.hasEmail;\n      // Fix up modified using accrualPeriodicity if needed\n      if (!outDoc.modified && outDoc.accrualPeriodicity.startsWith(\"R/P\"))\n        outDoc.modified = outDoc.accrualPeriodicity;\n      // Return prettified document\n      return JSON.stringify(outDoc, null, 4);\n    }\n  }\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <q-layout id=\"q-app\">\n    <EPA/>\n  \n    <q-page-container>\n      <q-scroll-area style=\"width:100%;height: 900px; max-height: 100vh;\">\n\n        <q-jumbotron dark img-src=\"https://www.epa.gov/sites/production/files/styles/microsite_banner/public/2018-08/epa-banner-images/banners_xcpp_aug2018.jpg\">\n          <div class=\"q-display-3\">Welcome!</div>\n          <div class=\"q-subheading\">\n            Welcome to the EPA Open Data Metadata Editor in support of EPA's initiative to make data open, discoverable, and usable.\n          </div>\n          <hr class=\"q-hr q-my-lg\">\n          <div>\n             This tool allows data owners to author, save, and submit metadata records that are compliant with <a href=\"https://www.epa.gov/geospatial/epa-metadata-technical-specification\">EPA's Metadata Technical Specification</a>. \n             Each element has a corresponding status: Mandatory (empty), Optional (empty), Invalid, and Valid. \n             Additional guidance and best practices are available by clicking each element's status icon. \n             Use the menu at the lower right to save, load, or submit records or log in as an EPA user. \n             Please contact the <a href=\"mailto:edg@epa.gov\">EPA EDG team</a> with any questions.\n          </div>\n        </q-jumbotron>\n\n\n<!--\n        <q-card  class=\"q-ma-sm\">\n          <q-card-main>\n            <q-btn color=\"secondary\" :icon=\"isEpaUser ? 'fas fa-user' : ''\" @click=\"isEpaUser=!isEpaUser\">&nbsp;&nbsp;Pretend Log{{isEpaUser ? 'off' : 'in'}}</q-btn>\n          </q-card-main>\n        </q-card>\n-->\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Title\" \n            :guidance=\"getGuidanceFor('title')\"\n            :validations.sync=\"validations.title\"\n            :mandatory=\"config['title']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please enter a title for the dataset\" :userText.sync=\"doc.title\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Description\" \n            :guidance=\"getGuidanceFor('description')\"\n            :validations.sync=\"validations.description\"\n            :mandatory=\"config['description']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please enter a description for the dataset\" multiLine  :userText.sync=\"doc.description\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Place Keywords\" \n            :guidance=\"getGuidanceFor('tags_place')\"\n            :validations.sync=\"validations.tags_place\"\n            :mandatory=\"config['tags_place']['mandatory']\"\n          />\n          <q-card-main>\n            <TagCollector :collectedTags.sync=\"doc.tags_place\" :availableTags.sync=\"config['tags_place']['availableTags']\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"ISO Keywords\" \n            :guidance=\"getGuidanceFor('tags_iso')\"\n            :validations.sync=\"validations.tags_iso\"\n            :mandatory=\"config['tags_iso']['mandatory']\"\n          />\n          <q-card-main>\n            <TagCollector :collectedTags.sync=\"doc.tags_iso\" :availableTags.sync=\"config['tags_iso']['availableTags']\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"EPA Organization Keywords\" \n            :guidance=\"getGuidanceFor('epa_org')\"\n            :validations.sync=\"validations.epa_org\"\n            :mandatory=\"config['epa_org']['mandatory']\"\n          />\n          <q-card-main>\n            <TagCollector :collectedTags.sync=\"doc.epa_org\" :availableTags.sync=\"config['epa_org']['availableTags']\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"EPA Theme\" \n            :guidance=\"getGuidanceFor('tags_epa_theme')\"\n            :validations.sync=\"validations.tags_epa_theme\"\n            :mandatory=\"config['tags_epa_theme']['mandatory']\"\n          />\n          <q-card-main>\n            <TagCollector :collectedTags.sync=\"doc.tags_epa_theme\" :availableTags.sync=\"config['tags_epa_theme']['availableTags']\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Last Update\" \n            :guidance=\"getGuidanceFor('modified')\"\n            :validations.sync=\"validations.modified\"\n            :mandatory=\"config['modified']['mandatory']\"\n          />\n          <q-card-main>\n            <DateOrRangeInput :userInput.sync=\"doc.modified\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Update Frequency\" \n            :guidance=\"getGuidanceFor('accrualPeriodicity')\"\n            :validations.sync=\"validations.accrualPeriodicity\"\n            :mandatory=\"config['accrualPeriodicity']['mandatory']\"\n          />\n          <q-card-main>\n            <PeriodicityInput :userInput.sync=\"doc.accrualPeriodicity\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Publishing Organization\" \n            :guidance=\"getGuidanceFor('publisher')\"\n            :validations.sync=\"validations.publisher\"\n            :mandatory=\"config['publisher']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please enter the name of the publishing organization for the dataset\" :userText.sync=\"doc.publisher\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Publisher\" \n            :guidance=\"getGuidanceFor('contactPoint.fn')\"\n            :validations.sync=\"validations.contactPoint.fn\"\n            :mandatory=\"config.contactPoint.fn['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please enter the name of the publisher for the dataset\" :userText.sync=\"doc.contactPoint.fn\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Publisher Email\" \n            :guidance=\"getGuidanceFor('contactPoint.hasEmail')\"\n            :validations.sync=\"validations.contactPoint.hasEmail\"\n            :mandatory=\"config.contactPoint.hasEmail['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please enter the email address of the publisher for the dataset\" :userText.sync=\"doc.contactPoint.hasEmail\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Identifier\" \n            :guidance=\"getGuidanceFor('identifier')\"\n            :validations.sync=\"validations.identifier\"\n            :mandatory=\"config['identifier']['mandatory']\"\n          />\n          <q-card-main>\n            <DocId :userText.sync=\"doc.identifier\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Access Level\" \n            :guidance=\"getGuidanceFor('accessLevel')\"\n            :validations.sync=\"validations.accessLevel\"\n            :mandatory=\"config['accessLevel']['mandatory']\"\n          />\n          <q-card-main>\n            <OptionSelector :selectedOption.sync=\"doc.accessLevel\" :availableOptions.sync=\"config['accessLevel']['availableOptions']\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Rights\" \n            :guidance=\"getGuidanceFor('rights')\"\n            :validations.sync=\"validations.rights\"\n            :mandatory=\"doc.accessLevel!=='public'\"\n          />\n          <q-card-main>\n            <TextInput v-if=\"!doc.accessLevel || doc.accessLevel=='public'\" defaultText=\"Restrictions on the dataset\" :userText.sync=\"doc.rights\" />\n            <OptionSelector v-else :selectedOption.sync=\"doc.rights\" :availableOptions.sync=\"config['rights']['availableOptions']\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Data License\" \n            :guidance=\"getGuidanceFor('license')\"\n            :validations.sync=\"validations.license\"\n            :mandatory=\"config['license']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"URL of the license for the dataset\" :userText.sync=\"doc.license\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Temporal Extent\" \n            :guidance=\"getGuidanceFor('temporal')\"\n            :validations.sync=\"validations.temporal\"\n            :mandatory=\"config['temporal']['mandatory']\"\n          />\n          <q-card-main>\n            <DateOrRangeInput :userInput.sync=\"doc.temporal\" :range=\"true\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Release Date\" \n            :guidance=\"getGuidanceFor('issued')\"\n            :validations.sync=\"validations.issued\"\n            :mandatory=\"config['issued']['mandatory']\"\n          />\n          <q-card-main>\n            <DateOrRangeInput :userInput.sync=\"doc.issued\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Language\" \n            :guidance=\"getGuidanceFor('language')\"\n            :validations.sync=\"validations.language\"\n            :mandatory=\"config['language']['mandatory']\"\n          />\n          <q-card-main>\n            <TagCollector :collectedTags.sync=\"doc.language\" :availableTags.sync=\"config['language']['availableTags']\" :maxTagsToShow=\"getConfigFor( 'language','maxTagsToShow')\"/>\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Data Quality\" \n            :guidance=\"getGuidanceFor('dataQuality')\"\n            :validations.sync=\"validations.language\"\n            :mandatory=\"config['dataQuality']['mandatory']\"\n          />\n          <q-card-main>\n            <BooleanSelector :userSelection.sync=\"doc.dataQuality\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Conforms To\" \n            :guidance=\"getGuidanceFor('conformsTo')\"\n            :validations.sync=\"validations.conformsTo\"\n            :mandatory=\"config['conformsTo']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please provide a URL\" :userText.sync=\"doc.conformsTo\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Described By\" \n            :guidance=\"getGuidanceFor('describedBy')\"\n            :validations.sync=\"validations.describedBy\"\n            :mandatory=\"config['describedBy']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please provide a URL\" :userText.sync=\"doc.describedBy\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"Landing Page\" \n            :guidance=\"getGuidanceFor('landingPage')\"\n            :validations.sync=\"validations.landingPage\"\n            :mandatory=\"config['landingPage']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please provide a URL\" :userText.sync=\"doc.landingPage\" />\n          </q-card-main>\n        </q-card>\n\n        <q-card  class=\"q-ma-sm\">\n          <ElementHeader title=\"References\" \n            :guidance=\"getGuidanceFor('references')\"\n            :validations.sync=\"validations.references\"\n            :mandatory=\"config['references']['mandatory']\"\n          />\n          <q-card-main>\n            <TextInput defaultText=\"Please provide a URL\" :userText.sync=\"doc.references\" />\n          </q-card-main>\n        </q-card>\n<!--\n\n-->\n        <br/><br/><br/>\n\n        <SpeedDial :doc=\"materializeDoc\" />\n      </q-scroll-area>\n    </q-page-container>\n  </q-layout>\n\n<!--\n\n\n        <q-card  class=\"q-ma-sm\">\n          <q-card-main>\n          </q-card-main>\n        </q-card>\n\n-->\n\n</template>\n\n<script>\nimport mdSpec from \"./assets/epa-metadata-tech-spec.json\";\nimport config from \"./config.js\";\n\nimport EPA from \"./components/EPA.vue\";\nimport ElementHeader from \"./components/ElementHeader.vue\";\n//import ORCID from './components/ORCID.vue'\nimport TextInput from \"./components/TextInput.vue\";\nimport TagCollector from \"./components/TagCollector.vue\";\nimport PeriodicityInput from \"./components/PeriodicityInput.vue\";\nimport DateOrRangeInput from \"./components/DateOrRangeInput.vue\";\nimport DocId from \"./components/DocId.vue\";\nimport OptionSelector from \"./components/OptionSelector.vue\";\nimport BooleanSelector from \"./components/BooleanSelector.vue\";\nimport SpeedDial from \"./components/SpeedDial.vue\";\nimport { uuid } from \"vue-uuid\";\n\nvar noop = function() {};\n\nexport default {\n  name: \"app\",\n  components: {\n    EPA,\n    ElementHeader,\n    TextInput,\n    TagCollector,\n    PeriodicityInput,\n    DateOrRangeInput,\n    DocId,\n    OptionSelector,\n    BooleanSelector,\n    SpeedDial\n\n    //, ORCID\n  },\n  data() {\n    return {\n      doc: {\n        title: \"\",\n        description: \"\",\n        tags_epa_theme: [],\n        tags_place: [],\n        tags_iso: [],\n        epa_org: [],\n        modified: \"\",\n        publisher: \"\",\n        contactPoint: {\n          \"@type\": \"vcard:Contact\",\n          fn: \"\",\n          hasEmail: \"\"\n        },\n        identifier: \"\",\n        accessLevel: \"\",\n        rights: \"\",\n        license: \"\",\n        temporal: \"\",\n        issued: \"\",\n        accrualPeriodicity: \"\",\n        language: \"\",\n        dataQuality: false,\n        conformsTo: \"\",\n        describedBy: \"\",\n        landingPage: \"\",\n        references: \"\"\n      },\n      validations: {\n        title: \"\",\n        description: \"\",\n        tags_epa_theme: \"\",\n        tags_place: \"\",\n        tags_iso: \"\",\n        epa_org: \"\",\n        modified: \"\",\n        publisher: \"\",\n        contactPoint: {\n          fn: \"\",\n          hasEmail: \"\"\n        },\n        identifier: \"\",\n        accessLevel: \"\",\n        rights: \"\",\n        license: \"\",\n        temporal: \"\",\n        issued: \"\",\n        accrualPeriodicity: \"\",\n        language: \"\",\n        dataQuality: \"\",\n        conformsTo: \"\",\n        describedBy: \"\",\n        landingPage: \"\",\n        references: \"\"\n      },\n      mdSpec: mdSpec,\n      config: config,\n      uuid: uuid,\n      isEpaUser: false\n    };\n  },\n\n  methods: {\n    getConfigFor(mdElement, cfgElement, defaultValue) {\n      var searchDoc;\n      if (\n        cfgElement == \"guidance\" ||\n        cfgElement == \"epaguidance\" ||\n        cfgElement == \"externalguidance\"\n      )\n        searchDoc = this.mdSpec;\n      else searchDoc = this.config;\n      var mdElementSpec = this.findElement(searchDoc, mdElement);\n      return mdElementSpec && mdElementSpec[cfgElement]\n        ? mdElementSpec[cfgElement]\n        : defaultValue;\n    },\n\n    getGuidanceFor(mdElement) {\n      var guidance = this.getConfigFor(mdElement, \"guidance\") || \"\";\n      if (this.isEpaUser) {\n        var epaguidance = this.getConfigFor(mdElement, \"epaguidance\") || \"\";\n        if (epaguidance) guidance += \"<br/>\" + epaguidance;\n      } else {\n        var externalguidance =\n          this.getConfigFor(mdElement, \"externalguidance\") || \"\";\n        if (externalguidance) guidance += \"<br/>\" + externalguidance;\n      }\n      return guidance.trim()\n        ? guidance.trim()\n        : \"No guidance available at this time.\";\n    },\n\n    validateElement(mdElement) {\n      var mdElementValue = this.findElement(this.doc, mdElement);\n      var elementConfig = this.findElement(this.config, mdElement);\n      var validationResults = \"\";\n      if (elementConfig) {\n        var validators = elementConfig.validators;\n        if (!validators || !validators.length) return; // No validator(s) for element\n        validators.forEach(validator => {\n          validator.args.doc = this.doc;\n          validationResults +=\n            validator.fn.call(this, mdElementValue, validator.args) + \"\\n\";\n        });\n      } else {\n        // No config for element\n        validationResults = \"No validators available for this element\";\n      }\n      this.setElement(this.validations, mdElement, validationResults);\n    },\n\n    findElement(doc, elementPath) {\n      var tempRoot = doc;\n      noop(tempRoot);\n      try {\n        return eval(\"tempRoot.\" + elementPath);\n      } catch (e) {\n        return \"\";\n      }\n    },\n\n    setElement(doc, elementPath, newValue) {\n      elementPath = \"tempRoot.\" + elementPath;\n      var i = elementPath.lastIndexOf(\".\");\n      var leaf = elementPath.substring(i + 1);\n      elementPath = elementPath.substring(0, i);\n      var tempRoot = doc;\n      noop(tempRoot);\n      var element = eval(elementPath);\n      element[leaf] = newValue;\n    }\n  },\n  watch: {\n    \"doc.title\": {\n      handler: function() {\n        this.validateElement(\"title\");\n      },\n      immediate: true\n    },\n    \"doc.description\": {\n      handler: function() {\n        this.validateElement(\"description\");\n      },\n      immediate: true\n    },\n    \"doc.epa_org\": {\n      handler: function() {\n        this.validateElement(\"epa_org\");\n      },\n      immediate: true\n    },\n    \"doc.tags_place\": {\n      handler: function() {\n        this.validateElement(\"tags_place\");\n      },\n      immediate: true\n    },\n    \"doc.tags_iso\": {\n      handler: function() {\n        this.validateElement(\"tags_iso\");\n      },\n      immediate: true\n    },\n    \"doc.tags_epa_theme\": {\n      handler: function() {\n        this.validateElement(\"tags_epa_theme\");\n      },\n      immediate: true\n    },\n    \"doc.modified\": {\n      handler: function() {\n        this.validateElement(\"modified\");\n        this.validateElement(\"accrualPeriodicity\");\n      },\n      immediate: true\n    },\n    \"doc.accrualPeriodicity\": {\n      handler: function() {\n        this.validateElement(\"accrualPeriodicity\");\n        this.validateElement(\"modified\");\n      },\n      immediate: true\n    },\n    \"doc.publisher\": {\n      handler: function() {\n        this.validateElement(\"publisher\");\n      },\n      immediate: true\n    },\n    \"doc.contactPoint.fn\": {\n      handler: function() {\n        this.validateElement(\"contactPoint.fn\");\n      },\n      immediate: true\n    },\n    \"doc.contactPoint.hasEmail\": {\n      handler: function() {\n        this.validateElement(\"contactPoint.hasEmail\");\n      },\n      immediate: true\n    },\n    \"doc.identifier\": {\n      handler: function() {\n        this.validateElement(\"identifier\");\n      },\n      immediate: true\n    },\n    \"doc.accessLevel\": {\n      handler: function() {\n        this.validateElement(\"accessLevel\");\n      },\n      immediate: true\n    },\n\n    \"doc.rights\": {\n      handler: function() {\n        this.validateElement(\"rights\");\n      },\n      immediate: true\n    },\n    \"doc.license\": {\n      handler: function() {\n        this.validateElement(\"license\");\n      },\n      immediate: true\n    },\n    \"doc.temporal\": {\n      handler: function() {\n        this.validateElement(\"temporal\");\n      },\n      immediate: true\n    },\n\n    \"doc.issued\": {\n      handler: function() {\n        this.validateElement(\"issued\");\n      },\n      immediate: true\n    },\n    \"doc.language\": {\n      handler: function() {\n        this.validateElement(\"language\");\n      },\n      immediate: true\n    },\n    \"doc.dataQuality\": {\n      handler: function() {\n        this.validateElement(\"dataQuality\");\n      },\n      immediate: true\n    },\n    \"doc.conformsTo\": {\n      handler: function() {\n        this.validateElement(\"conformsTo\");\n      },\n      immediate: true\n    },\n    \"doc.describedBy\": {\n      handler: function() {\n        this.validateElement(\"describedBy\");\n      },\n      immediate: true\n    },\n    \"doc.landingPage\": {\n      handler: function() {\n        this.validateElement(\"landingPage\");\n      },\n      immediate: true\n    },\n    \"doc.references\": {\n      handler: function() {\n        this.validateElement(\"references\");\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    materializeDoc() {\n      // Deep copy the working document\n      var outDoc = JSON.parse(JSON.stringify(this.doc));\n      // Fix up hasEmail\n      outDoc.contactPoint.hasEmail = \"mailto:\" + outDoc.contactPoint.hasEmail;\n      // Fix up modified using accrualPeriodicity if needed\n      if (!outDoc.modified && outDoc.accrualPeriodicity.startsWith(\"R/P\"))\n        outDoc.modified = outDoc.accrualPeriodicity;\n      // Return prettified document\n      return JSON.stringify(outDoc, null, 4);\n    }\n  }\n};\n</script>\n\n<style>\na:link,\na:visited {\n  color: white;\n  text-align: center;\n  text-decoration: underline;\n}\n\na:hover,\na:active {\n  background-color: #529e34;\n}\n</style>\n"]}]}